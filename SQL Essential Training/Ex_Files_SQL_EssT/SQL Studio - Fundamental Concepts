-- Creating a table
--CREATE TABLE test ( 
    --a INTEGER,
    --b TEXT
--);

--INSERT INTO test VALUES ( 1, 'a');
--INSERT INTO test VALUES ( 2, 'b');
--INSERT INTO test VALUES ( 3, 'c');
--SELECT * FROM test;


-- Deleting a table
--CREATE TABLE test (a TEXT, b TEXT );
--INSERT INTO test VALUES ('one', 'two' );
--SELECT * FROM test;

--DROP TABLE test;

--DROP TABLE IF EXISTS test;


-- Inserting rows
--CREATE TABLE test (a INTEGER, b TEXT, c TEXT);

--INSERT INTO test VALUES ( 1, 'This', 'Right there!' );

--INSERT INTO test ( b, c ) VALUES ('That', 'Over there!' );

--INSERT INTO test DEFAULT VALUES;

--INSERT INTO test ( a, b, c) SELECT id, name, description from item;

--SELECT * FROM test;


--Deleting Rows
--SELECT * FROM test;

--DELETE FROM test WHERE a=1;


--The NULL value
--INSERT INTO test (a, b, c) VALUES (0, NULL, '');

--SELECT * FROM test where a IS NOT NULL;

--SELECT * FROM test WHERE c IS NULL;

--DROP TABLE IF EXISTS test;

--CREATE TABLE test (
--a INTEGER NOT NULL, 
--b TEXT NOT NULL, 
--c TEXT
--);

--INSERT INTO test VALUES (1, 'this', 'that');
--INSERT INTO test (b, c) VALUES ('one', 'two');
--INSERT INTO test (a, b) VALUES ('one', 'two');
--SELECT * FROM test;

--DROP TABLE IF EXISTS test;


-- Constraining columns
--DROP TABLE IF EXISTS test;
--CREATE TABLE test (a TEXT UNIQUE, b TEXT, c TEXT DEFAULT 'panda');
--INSERT INTO test ( a, b) VALUES (NULL, 'two');
--INSERT INTO test ( a, b) VALUES (NULL, 'two');
--SELECT * FROM test;


--Changing a Schema
--DROP TABLE IF EXISTS test;
--CREATE TABLE test (a TEXT, b TEXT, c TEXT);
--INSERT INTO test VALUES ('one', 'two', 'three');
--INSERT INTO test VALUES ('two', 'three', 'four');
--INSERT INTO test VALUES ( 'three', 'four', 'five');
--SELECT * FROM test;

--ALTER TABLE test ADD d TEXT;
--ALTER TABLE test ADD e TEXT DEFAULT 'panda';


--ID columns
--DROP TABLE IF EXISTS test;
--CREATE TABLE test (
    --id INTEGER PRIMARY KEY,
    --a INTEGER,
    --b TEXT
--);
--INSERT INTO test (a, b) VALUES (10, 'a');
--INSERT INTO test (a, b) VALUES (11, 'b');
--INSERT INTO test (a, b) VALUES (12, 'c');
--SELECT * FROM test;


--Filtering data
--SELECT Name, Continent, Population FROM Country
    --WHERE Population < 100000 AND Continent = 'Oceania' ORDER BY Population DESC;

--SELECT Name, Continent, Population FROM Country
    --WHERE Name LIKE '%island%' ORDER BY Name;
    
--SELECT Name, Continent, Population FROM Country
    --WHERE Name LIKE '_a%' ORDER BY Name;

--SELECT Name, Continent, Population FROM Country
    --WHERE Continent IN ('Europe', 'Asia') ORDER BY Name;


--Remove Duplicates
--SELECT DISTINCT Continent FROM Country;


--Ordering output
--SELECT Name FROM Country;
--SELECT Name FROM Country ORDER BY Name;
--SELECT Name FROM Country ORDER BY Name DESC;
--SELECT Name FROM Country ORDER BY Name ASC;
--SELECT Name, Continent FROM Country ORDER BY Continent, Name;
--SELECT Name, Continent, Region FROM Country ORDER BY Continent DESC, Region, Name;


--Conditional Expressions
--DROP TABLE IF EXISTS booltest;
--CREATE TABLE booltest (a INTEGER, b INTEGER);
--INSERT INTO booltest VALUES (1, 0);
--SELECT * FROM booltest;

--SELECT
    --CASE WHEN a THEN 'true' ELSE 'false' END as boolA,
    --CASE WHEN b THEN 'true' ELSE 'false' END as boolB
    --FROM booltest
--;

--SELECT
    --CASE a WHEN 1 THEN 'true' ELSE 'false' END AS boolA,
    --CASE b WHEN 1 THEN 'true' ELSE 'false' END AS boolB
    --from booltest
--;

--DROP TABLE IF EXISTS booltest;